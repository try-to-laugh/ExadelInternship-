{"version":3,"sources":["webpack:///src/$_lazy_route_resource lazy namespace object","webpack:///src/app/api.service.ts","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/pages/authentication/authentication.component.ts","webpack:///src/app/pages/authentication/authentication.component.html","webpack:///src/app/pages/authentication/authentication.module.ts","webpack:///src/app/pages/authentication/authentication.service.ts","webpack:///src/app/pages/authentication/authentication.ts","webpack:///src/app/pages/authentication/user-login-form/notification/notification.component.ts","webpack:///src/app/pages/authentication/user-login-form/notification/notification.component.html","webpack:///src/app/pages/authentication/user-login-form/user-login-form.component.ts","webpack:///src/app/pages/authentication/user-login-form/user-login-form.component.html","webpack:///src/app/pages/booking-search/booking-search-filters.service.ts","webpack:///src/app/pages/booking-search/booking-search-table/booking-search-table-data-source.ts","webpack:///src/app/pages/booking-search/booking-search-table/booking-search-table.component.ts","webpack:///src/app/pages/booking-search/booking-search-table/booking-search-table.component.html","webpack:///src/app/pages/booking-search/booking-search.module.ts","webpack:///src/app/pages/booking-search/dashboard/available-filters.ts","webpack:///src/app/pages/booking-search/dashboard/dashboard.component.ts","webpack:///src/app/pages/booking-search/dashboard/dashboard.component.html","webpack:///src/app/pages/booking-search/filterboard/filterboard.component.ts","webpack:///src/app/pages/booking-search/filterboard/filterboard.component.html","webpack:///src/app/pages/main-page/banner-next-booking/banner-module.ts","webpack:///src/app/pages/main-page/banner-next-booking/banner-next-booking.component.ts","webpack:///src/app/pages/main-page/banner-next-booking/banner-next-booking.component.html","webpack:///src/app/pages/main-page/card-grid/card-grid-module.ts","webpack:///src/app/pages/main-page/card-grid/card-grid.component.ts","webpack:///src/app/pages/main-page/card-grid/card-grid.component.html","webpack:///src/app/pages/main-page/main-page.component.ts","webpack:///src/app/pages/main-page/main-page.component.html","webpack:///src/app/pages/main-page/side-nav-home-page/entity-orders/mock-order.ts","webpack:///src/app/pages/main-page/side-nav-home-page/side-nav-home-page.component.ts","webpack:///src/app/pages/main-page/side-nav-home-page/side-nav-home-page.component.html","webpack:///src/app/pages/main-page/side-nav-home-page/side-nav-module.ts","webpack:///src/app/pages/office-creation/creation-form/creation-form.component.ts","webpack:///src/app/pages/office-creation/creation-form/creation-form.component.html","webpack:///src/app/pages/office-creation/office-creation.component.ts","webpack:///src/app/pages/office-creation/office-creation.component.html","webpack:///src/app/pages/office-creation/office-creation.module.ts","webpack:///src/app/pages/office-creation/office-creation.service.ts","webpack:///src/app/shared/country-card/card-module.ts","webpack:///src/app/shared/country-card/country-card.component.ts","webpack:///src/app/shared/country-card/country-card.component.html","webpack:///src/app/shared/country-card/entity/card.service.ts","webpack:///src/app/shared/footer/footer.component.ts","webpack:///src/app/shared/footer/footer.component.html","webpack:///src/app/shared/header-costom/header-costom.component.ts","webpack:///src/app/shared/header-costom/header-costom.component.html","webpack:///src/app/shared/header/header.component.ts","webpack:///src/app/shared/header/header.component.html","webpack:///src/app/shared/header/header.module.ts","webpack:///src/app/shared/header/header.service.ts","webpack:///src/app/shared/mock-menu-tabs.ts","webpack:///src/app/shared/services/http-request-interceptor.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","ApiService","http","httpOptions","headers","apiUrl","url","get","data","post","put","providedIn","routes","path","component","redirectTo","pathMatch","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","provide","useClass","multi","useValue","declarations","providers","bootstrap","AuthenticationComponent","changeDetection","OnPush","AuthenticationModule","AuthenticationService","username","password","body","set","pipe","Authentication","NotificationComponent","UserLoginFormComponent","router","authenticationService","_snackBar","auth","durationInSeconds","verticalPosition","loginForm","required","pattern","email","valid","openFromComponent","duration","postData","subscribe","response","navigateByUrl","error","onLogin","BookingSearchFiltersService","office","nearestDate","Date","floor","chairId","tags","BookingSearchTableDataSource","bookingSearchFiltersService","dataMutations","paginator","page","sort","sortChange","getPagedData","getSortedData","startIndex","pageIndex","pageSize","splice","active","direction","a","b","isAsc","compare","getTime","BookingSearchTableComponent","dataSource","displayedColumns","getBookingSearchTable","tableItems","alert","table","BookingSearchModule","AvailableFilters","offices","floors","additionalFilters","DashboardComponent","FilterboardComponent","filterForm","selectedOffice","selectedFloor","selectedDate","selectedAdditionalFilters","selectedTimeStart","selectedTimeEnd","filterSubscription","getAvailableFilters","availableFilters","unsubscribe","BannerModule","BannerNextBookingComponent","CardGridModule","CardGridComponent","serviceMe","getSmth","getHeroes","heroes","countries","MainPageComponent","sidenav","close","ordersMock","country","city","street","houseNumber","date","timeFrom","timeTo","idOfPlace","SideNavHomePageComponent","orders","SideNavModule","CreationFormComponent","_formBuilder","addOffice","setCities","cities","formGroup","buildFormGroup","filteredCountries","valueChanges","value","_filter","group","countryFormGroup","countryControl","requireCountryMatch","cityFormGroup","cityControl","requireCityMatch","addressFormGroup","addressControl","floorFormGroup","floorControl","maxLength","options","filterValue","name","toLowerCase","filter","option","includes","control","names","map","selection","requireMatch","event","selectedIndex","countryId","emit","filteredCities","address","trim","console","log","setErrors","incorrect","cityStep","completed","showError","selectionChange","onSelectionChange","submit","OfficeCreationComponent","officeCreationService","countries$","getCountries","cities$","getCities","OfficeCreationModule","OfficeCreationService","CardModule","CountryCardComponent","CardService","heroesUrl","FooterComponent","HeaderCostomComponent","HeaderComponent","headerService","menu","getData","user","navigate","onLogo","HeaderModule","HeaderService","MENU","HttpRequestInterceptor","next","clone","withCredentials","handle","environment","production","err"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import {Injectable} from '@angular/core';\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\nimport {Observable} from 'rxjs';\n\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class ApiService {\n\tprivate httpOptions = {\n\t\theaders: new HttpHeaders({'Content-Type': 'application/json'})\n\t};\n\tprivate apiUrl = 'http://hotchairs.herokuapp.com';\n\t/*\tprivate apiUrl = 'https://restcountries.eu/rest/v2/all';*/\n\n\tconstructor(private http: HttpClient) {}\n\n\tget<T>(url: string): Observable<T> {\n\t\treturn this.http.get<T>(this.apiUrl + url);\n\t}\n\tpost<T>(url: string, data: object): Observable<T> {\n\t\treturn this.http.post<T>(this.apiUrl + url, data, this.httpOptions);\n\t}\n\tput<T>(url: string, data: object): Observable<T> {\n\t\treturn this.http.put<T>(this.apiUrl + url, data, this.httpOptions);\n\t}\n\tdelete<T>(url: string): Observable<T> {\n\t\treturn this.http.delete<T>(this.apiUrl + url, this.httpOptions);\n\t}\n}\n","import {NgModule} from '@angular/core';\nimport {RouterModule, Routes} from '@angular/router';\nimport {HeaderComponent} from '@shared/header/header.component';\nimport {AuthenticationComponent} from '@pages/authentication/authentication.component';\nimport {MainPageComponent} from '@pages/main-page/main-page.component';\nimport {OfficeCreationComponent} from '@pages/office-creation/office-creation.component';\nimport {DashboardComponent} from './pages/booking-search/dashboard/dashboard.component';\n\nconst routes: Routes = [\n\t{path: 'login', component: AuthenticationComponent},\n\t{path: 'main', component: HeaderComponent},\n\t{path: '', redirectTo: '/login', pathMatch: 'full'},\n\t{path: 'home', component: MainPageComponent},\n\t{path: 'office-creation', component: OfficeCreationComponent},\n\t{path: 'booking-search', component: DashboardComponent}\n];\n\n@NgModule({\n\timports: [RouterModule.forRoot(routes)],\n\texports: [RouterModule]\n})\nexport class AppRoutingModule {}\n","import {Component} from '@angular/core';\n\n@Component({\n\tselector: 'app-root',\n\ttemplateUrl: './app.component.html',\n\tstyleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n\ttitle = 'hot-chairs';\n}\n","<router-outlet></router-outlet>\n","import {BrowserModule} from '@angular/platform-browser';\nimport {NgModule} from '@angular/core';\n\nimport {AppRoutingModule} from './app-routing.module';\nimport {AppComponent} from './app.component';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport {HeaderModule} from '@shared/header/header.module';\nimport {AuthenticationModule} from '@pages/authentication/authentication.module';\nimport {MainPageComponent} from '@pages/main-page/main-page.component';\nimport {SideNavModule} from '@pages/main-page/side-nav-home-page/side-nav-module';\nimport {HttpClientModule} from '@angular/common/http';\nimport {OfficeCreationModule} from '@pages/office-creation/office-creation.module';\nimport {ApiService} from './api.service';\nimport {DashboardComponent} from './pages/booking-search/dashboard/dashboard.component';\nimport {MAT_DATE_LOCALE, MatNativeDateModule} from '@angular/material/core';\nimport {BookingSearchModule} from '@pages/booking-search/booking-search.module';\n\nimport {HeaderService} from '@shared/header/header.service';\nimport {AuthenticationService} from '@pages/authentication/authentication.service';\n\nimport {HTTP_INTERCEPTORS} from '@angular/common/http';\nimport {HttpRequestInterceptor} from '@shared/services/http-request-interceptor';\n\n@NgModule({\n\tdeclarations: [AppComponent, MainPageComponent, DashboardComponent],\n\timports: [\n\t\tBrowserModule,\n\t\tAppRoutingModule,\n\t\tBrowserAnimationsModule,\n\t\tSideNavModule,\n\t\tHttpClientModule,\n\t\tHeaderModule,\n\t\tAuthenticationModule,\n\t\tSideNavModule,\n\t\tOfficeCreationModule,\n\t\tMatNativeDateModule,\n\t\tBookingSearchModule\n\t],\n\tproviders: [\n\t\t{provide: HTTP_INTERCEPTORS, useClass: HttpRequestInterceptor, multi: true},\n\t\tHeaderService,\n\t\tAuthenticationService,\n\t\tApiService,\n\t\t{provide: MAT_DATE_LOCALE, useValue: 'en-GB'}\n\t],\n\tbootstrap: [AppComponent]\n})\nexport class AppModule {}\n","import {ChangeDetectionStrategy, Component, OnInit} from '@angular/core';\n\n@Component({\n\tselector: 'authentication',\n\ttemplateUrl: './authentication.component.html',\n\tstyleUrls: ['./authentication.component.scss'],\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class AuthenticationComponent implements OnInit {\n\tconstructor() {}\n\n\tngOnInit(): void {}\n}\n","<div class=\"logo\">\n\t<img src=\"assets/images/logo-blue-m.png\" alt=\"Logo\" class=\"logo-image\" />\n\t<span class=\"title\">HOTCHAIRS</span>\n</div>\n<user-login-form></user-login-form>\n","import {BrowserModule} from '@angular/platform-browser';\r\nimport {NgModule} from '@angular/core';\r\n\r\nimport {HttpClientModule} from '@angular/common/http';\r\nimport {AuthenticationComponent} from '@pages/authentication/authentication.component';\r\nimport {UserLoginFormComponent} from '@pages/authentication/user-login-form/user-login-form.component';\r\nimport {NotificationComponent} from '@pages/authentication/user-login-form/notification/notification.component';\r\n\r\nimport {ReactiveFormsModule} from '@angular/forms';\r\nimport {MatFormFieldModule} from '@angular/material/form-field';\r\nimport {MatInputModule} from '@angular/material/input';\r\nimport {MatButtonModule} from '@angular/material/button';\r\nimport {MatCardModule} from '@angular/material/card';\r\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\r\nimport {AuthenticationService} from '@pages/authentication/authentication.service';\r\n\r\n@NgModule({\r\n\tdeclarations: [AuthenticationComponent, UserLoginFormComponent, NotificationComponent],\r\n\timports: [\r\n\t\tBrowserModule,\r\n\t\tHttpClientModule,\r\n\t\tReactiveFormsModule,\r\n\t\tMatFormFieldModule,\r\n\t\tMatInputModule,\r\n\t\tMatButtonModule,\r\n\t\tMatCardModule,\r\n\t\tMatSnackBarModule\r\n\t],\r\n\tproviders: [AuthenticationService]\r\n})\r\nexport class AuthenticationModule {}\r\n","import {Injectable} from '@angular/core';\nimport {HttpClient, HttpParams} from '@angular/common/http';\nimport {take} from 'rxjs/operators';\n\n@Injectable()\nexport class AuthenticationService {\n\tconstructor(private http: HttpClient) {}\n\n\tpostData(username: string, password: string) {\n\t\tconst body = new HttpParams().set('username', username).set('password', password);\n\t\treturn this.http.post('http://hotchairs.herokuapp.com/login', body).pipe(take(1));\n\t}\n}\n","export class Authentication {\n\tusername: string;\n\tpassword: string;\n}\n","import {ChangeDetectionStrategy, Component, OnInit} from '@angular/core';\n\n@Component({\n\tselector: 'notification',\n\ttemplateUrl: './notification.component.html',\n\tstyleUrls: ['./notification.component.scss'],\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class NotificationComponent implements OnInit {\n\tconstructor() {}\n\n\tngOnInit(): void {}\n}\n","<span class=\"notification\">Wrong username or password!</span>\n","import {ChangeDetectionStrategy, Component} from '@angular/core';\nimport {FormGroup, FormControl, Validators} from '@angular/forms';\nimport {Router} from '@angular/router';\nimport {Authentication} from '@pages/authentication/authentication';\nimport {AuthenticationService} from '@pages/authentication/authentication.service';\nimport {MatSnackBar, MatSnackBarVerticalPosition} from '@angular/material/snack-bar';\nimport {NotificationComponent} from '@pages/authentication/user-login-form/notification/notification.component';\n\n@Component({\n\tselector: 'user-login-form',\n\ttemplateUrl: './user-login-form.component.html',\n\tstyleUrls: ['./user-login-form.component.scss'],\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tproviders: [AuthenticationService]\n})\nexport class UserLoginFormComponent {\n\tauth: Authentication = new Authentication();\n\tdurationInSeconds = 5;\n\tverticalPosition: MatSnackBarVerticalPosition = 'top';\n\n\tconstructor(\n\t\tprivate router: Router,\n\t\tprivate authenticationService: AuthenticationService,\n\t\tprivate _snackBar: MatSnackBar\n\t) {\n\t}\n\n\tloginForm = new FormGroup({\n\t\tusername: new FormControl('', [Validators.required, Validators.pattern(/^\\S*$/), Validators.email]),\n\t\tpassword: new FormControl('', [Validators.required, Validators.pattern(/^\\S*$/)])\n\t});\n\n\tonLogin(auth: Authentication): any {\n\t\tif (!this.loginForm.valid) {\n\t\t\tthis._snackBar.openFromComponent(NotificationComponent, {\n\t\t\t\tduration: this.durationInSeconds * 1000,\n\t\t\t\tverticalPosition: this.verticalPosition\n\t\t\t});\n\t\t} else {\n\t\t\tthis.authenticationService.postData(auth.username, auth.password)\n\t\t\t\t.subscribe(response => {\n\t\t\t\t\t\tthis.router.navigateByUrl('/main');\n\t\t\t\t\t} , error => {\n\t\t\t\t\t\tthis._snackBar.openFromComponent(NotificationComponent, {\n\t\t\t\t\t\t\tduration: this.durationInSeconds * 1000,\n\t\t\t\t\t\t\tverticalPosition: this.verticalPosition\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t}\n\t}\n}\n","<form [formGroup]=\"loginForm\">\n\t<div class=\"name-form\">\n\t\t<mat-card class=\"card\">\n\t\t\t<mat-card-content>\n\t\t\t\t<mat-form-field>\n\t\t\t\t\t<label>\n\t\t\t\t\t\t<input matInput formControlName=\"username\" placeholder=\"username\" [(ngModel)]=\"auth.username\" />\n\t\t\t\t\t</label>\n\t\t\t\t</mat-form-field>\n\t\t\t\t<mat-form-field>\n\t\t\t\t\t<label>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\t\tmatInput\n\t\t\t\t\t\t\tformControlName=\"password\"\n\t\t\t\t\t\t\tplaceholder=\"password\"\n\t\t\t\t\t\t\t[(ngModel)]=\"auth.password\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t</label>\n\t\t\t\t</mat-form-field>\n\t\t\t\t<button mat-flat-button color=\"primary\" (click)=\"onLogin(auth)\">login</button>\n\t\t\t</mat-card-content>\n\t\t</mat-card>\n\t</div>\n</form>\n","import {Injectable} from '@angular/core';\nimport {AvailableFilters} from '@pages/booking-search/dashboard/available-filters';\nimport {Observable, of} from 'rxjs';\nimport {BookingTableItem} from '@pages/booking-search/booking-search-table/booking-table-item';\nimport {BookingSearchModule} from '@pages/booking-search/booking-search.module';\n\n@Injectable({\n\tprovidedIn: BookingSearchModule\n})\nexport class BookingSearchFiltersService {\n\tgetAvailableFilters(): Observable<AvailableFilters> {\n\t\treturn of(\n\t\t\tnew AvailableFilters(\n\t\t\t\t['office1longlong long ', 'office2', 'office3'],\n\t\t\t\t['1', '2', '3', '8'],\n\t\t\t\t[\n\t\t\t\t\t'A conference room',\n\t\t\t\t\t'Close to the kitchen',\n\t\t\t\t\t'Close to the toilet',\n\t\t\t\t\t'Close to the cooler',\n\t\t\t\t\t'Close to the window'\n\t\t\t\t]\n\t\t\t)\n\t\t);\n\t}\n\tgetBookingSearchTable(): Observable<BookingTableItem[]> {\n\t\treturn of([\n\t\t\t{\n\t\t\t\toffice: 'office1jhgo;qh roghqorihfoqi hrofgiqhwerofigh qwoirhg',\n\t\t\t\tnearestDate: new Date(),\n\t\t\t\tfloor: '1',\n\t\t\t\tchairId: '1',\n\t\t\t\ttags: ['close to window']\n\t\t\t},\n\t\t\t{\n\t\t\t\toffice: 'office24tru4po iuthwofhqo[wefihi0i9 uf9o',\n\t\t\t\tnearestDate: new Date('2020-11-16T00:00:00'),\n\t\t\t\tfloor: '1',\n\t\t\t\tchairId: '2',\n\t\t\t\ttags: ['close to kitchen']\n\t\t\t},\n\t\t\t{\n\t\t\t\toffice: 'office1',\n\t\t\t\tnearestDate: new Date(),\n\t\t\t\tfloor: '1',\n\t\t\t\tchairId: '3',\n\t\t\t\ttags: ['close to window']\n\t\t\t},\n\t\t\t{\n\t\t\t\toffice: 'office1',\n\t\t\t\tnearestDate: new Date(),\n\t\t\t\tfloor: '1',\n\t\t\t\tchairId: '4',\n\t\t\t\ttags: ['close to window']\n\t\t\t}\n\t\t]);\n\t}\n\tconstructor() {}\n}\n","import {DataSource} from '@angular/cdk/collections';\nimport {MatPaginator} from '@angular/material/paginator';\nimport {MatSort} from '@angular/material/sort';\nimport {map, take} from 'rxjs/operators';\nimport {Observable, of as observableOf, merge} from 'rxjs';\nimport {BookingSearchFiltersService} from '@pages/booking-search/booking-search-filters.service';\nimport {BookingTableItem} from '@pages/booking-search/booking-search-table/booking-table-item';\nimport {AvailableFilters} from '@pages/booking-search/dashboard/available-filters';\nimport {MatTableDataSource} from '@angular/material/table';\n\n/**\n * Data source for the BookingTable view. This class should\n * encapsulate all logic for fetching and manipulating the displayed data\n * (including sorting, pagination, and filtering).\n */\nexport class BookingSearchTableDataSource extends DataSource<BookingTableItem> {\n\tdata: BookingTableItem[]; /* = EXAMPLE_DATA*/\n\tpaginator: MatPaginator;\n\tsort: MatSort;\n\n\tconstructor(private bookingSearchFiltersService: BookingSearchFiltersService) {\n\t\tsuper();\n\t}\n\n\t/**\n\t * Connect this data source to the table. The table will only update when\n\t * the returned stream emits new items.\n\t * @returns A stream of the items to be rendered.\n\t */\n\tconnect(): Observable<BookingTableItem[]> {\n\t\t// Combine everything that affects the rendered data into one update\n\t\t// stream for the data-table to consume.\n\t\tconst dataMutations = [this.data, this.paginator.page, this.sort.sortChange];\n\n\t\treturn merge(...dataMutations).pipe(\n\t\t\tmap(() => {\n\t\t\t\treturn this.getPagedData(this.getSortedData([...this.data]));\n\t\t\t})\n\t\t);\n\t}\n\tdisconnect() {}\n\tprivate getPagedData(data: BookingTableItem[]) {\n\t\tconst startIndex = this.paginator.pageIndex * this.paginator.pageSize;\n\t\treturn data.splice(startIndex, this.paginator.pageSize);\n\t}\n\tprivate getSortedData(data: BookingTableItem[]) {\n\t\tif (!this.sort.active || this.sort.direction === '') {\n\t\t\treturn data;\n\t\t}\n\n\t\treturn data.sort((a, b) => {\n\t\t\tconst isAsc = this.sort.direction === 'asc';\n\t\t\tswitch (this.sort.active) {\n\t\t\t\tcase 'office':\n\t\t\t\t\treturn compare(a.office, b.office, isAsc);\n\t\t\t\tcase 'floor':\n\t\t\t\t\treturn compare(a.floor, b.floor, isAsc);\n\t\t\t\tcase 'nearestDate':\n\t\t\t\t\treturn compare(a.nearestDate.getTime(), b.nearestDate.getTime(), isAsc);\n\t\t\t\tcase 'chairId':\n\t\t\t\t\treturn compare(a.chairId, b.chairId, isAsc);\n\t\t\t\tdefault:\n\t\t\t\t\treturn 0;\n\t\t\t}\n\t\t});\n\t}\n}\nfunction compare(a: string | number, b: string | number, isAsc: boolean) {\n\treturn (a < b ? -1 : 1) * (isAsc ? 1 : -1);\n}\n","import {AfterViewInit, Component, OnInit, ViewChild} from '@angular/core';\nimport {MatPaginator} from '@angular/material/paginator';\nimport {MatSort} from '@angular/material/sort';\nimport {MatTable} from '@angular/material/table';\nimport {BookingSearchTableDataSource} from './booking-search-table-data-source';\nimport {BookingSearchFiltersService} from '@pages/booking-search/booking-search-filters.service';\nimport {BookingTableItem} from '@pages/booking-search/booking-search-table/booking-table-item';\n\n@Component({\n\tselector: 'booking-search-table',\n\ttemplateUrl: './booking-search-table.component.html',\n\tstyleUrls: ['./booking-search-table.component.scss']\n})\nexport class BookingSearchTableComponent implements AfterViewInit, OnInit {\n\t@ViewChild(MatPaginator) paginator: MatPaginator;\n\t@ViewChild(MatSort) sort: MatSort;\n\t@ViewChild(MatTable) table: MatTable<BookingTableItem>;\n\t/*dataSource: BookingSearchTableDataSource;*/\n\tdataSource = new BookingSearchTableDataSource(this.bookingSearchFiltersService);\n\tconstructor(private bookingSearchFiltersService: BookingSearchFiltersService) {}\n\n\t/** Columns displayed in the table. Columns IDs can be added, removed, or reordered. */\n\tdisplayedColumns = ['office', 'nearestDate', 'floor', 'chairId', 'tags', 'booking'];\n\n\tngOnInit() {\n\t\tthis.bookingSearchFiltersService.getBookingSearchTable().subscribe((tableItems) => {\n\t\t\tthis.dataSource.data = tableItems;\n\t\t});\n\t}\n\tgetRecord(chairId) {\n\t\talert(chairId);\n\t}\n\n\tngAfterViewInit() {\n\t\tthis.dataSource.sort = this.sort;\n\t\tthis.dataSource.paginator = this.paginator;\n\t\tthis.table.dataSource = this.dataSource;\n\t}\n}\n","<div class=\"table-with-paginator\">\n\t<table mat-table class=\"full-width-table\" matSort aria-label=\"Elements\" >\n\t\t<ng-container matColumnDef=\"office\">\n\t\t\t<th mat-header-cell *matHeaderCellDef mat-sort-header>Office</th>\n\t\t\t<td mat-cell *matCellDef=\"let row\">{{ row.office }}</td>\n\t\t</ng-container>\n\n\t\t<ng-container matColumnDef=\"nearestDate\">\n\t\t\t<th mat-header-cell *matHeaderCellDef mat-sort-header>Nearest available date</th>\n\t\t\t<td mat-cell *matCellDef=\"let row\">{{ row.nearestDate | date: 'dd MMM yy' }}</td>\n\t\t</ng-container>\n\n\t\t<ng-container matColumnDef=\"floor\">\n\t\t\t<th mat-header-cell *matHeaderCellDef mat-sort-header>Floor</th>\n\t\t\t<td mat-cell *matCellDef=\"let row\">{{ row.floor }}</td>\n\t\t</ng-container>\n\n\t\t<ng-container matColumnDef=\"chairId\">\n\t\t\t<th mat-header-cell *matHeaderCellDef mat-sort-header>ChairID</th>\n\t\t\t<td mat-cell *matCellDef=\"let row\">{{ row.chairId }}</td>\n\t\t</ng-container>\n\t\t<ng-container matColumnDef=\"tags\">\n\t\t\t<th mat-header-cell *matHeaderCellDef mat-sort-header>Tags</th>\n\t\t\t<td mat-cell *matCellDef=\"let row\">{{ row.tags }}</td>\n\t\t</ng-container>\n\t\t<ng-container matColumnDef=\"booking\">\n\t\t\t<th mat-header-cell *matHeaderCellDef></th>\n\t\t\t<td mat-cell *matCellDef=\"let element\">\n\t\t\t\t<button class=\"book-button\" mat-raised-button color=\"primary\" (click)=\"getRecord(element.chairId)\">\n\t\t\t\t\tBook now\n\t\t\t\t</button>\n\t\t\t</td>\n\t\t</ng-container>\n\n\t\t<tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n\t\t<tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\n\t</table>\n\n\t<mat-paginator\n\t\t#paginator\n\t\t[length]=\"dataSource?.data.length\"\n\t\t[pageIndex]=\"0\"\n\t\t[pageSize]=\"50\"\n\t\t[pageSizeOptions]=\"[25, 50, 100, 250]\"\n\t>\n\t</mat-paginator>\n</div>\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport {MatSelectModule} from '@angular/material/select';\nimport {MatDatepickerModule} from '@angular/material/datepicker';\nimport {BookingSearchTableComponent} from './booking-search-table/booking-search-table.component';\nimport {MatTableModule} from '@angular/material/table';\nimport {MatButtonModule} from '@angular/material/button';\nimport {FilterboardComponent} from './filterboard/filterboard.component';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatPaginatorModule} from '@angular/material/paginator';\nimport {MatSortModule} from '@angular/material/sort';\n\n@NgModule({\n\tdeclarations: [BookingSearchTableComponent, FilterboardComponent],\n\texports: [BookingSearchTableComponent, FilterboardComponent],\n\timports: [\n\t\tCommonModule,\n\t\tFormsModule,\n\t\tMatFormFieldModule,\n\t\tMatSelectModule,\n\t\tMatDatepickerModule,\n\t\tMatTableModule,\n\t\tMatButtonModule,\n\t\tReactiveFormsModule,\n\t\tMatInputModule,\n\t\tMatPaginatorModule,\n\t\tMatSortModule\n\t]\n})\nexport class BookingSearchModule {}\n","export class AvailableFilters {\n\tconstructor(\n\t\tpublic offices: string[],\n\t\t/*public dates: Date[],\n\t\tpublic timeStarts: Time[],\n\t\tpublic timeFinishes: Time[],*/\n\t\tpublic floors: string[],\n\t\tpublic additionalFilters: string[]\n\t) {}\n}\n","import {ChangeDetectionStrategy, Component, Input, /*OnDestroy,*/ OnInit} from '@angular/core';\n/*import {FormControl, FormGroup} from '@angular/forms';*/\nimport {AvailableFilters} from '@pages/booking-search/dashboard/available-filters';\nimport {BookingSearchFiltersService} from '../booking-search-filters.service';\n/*import {Subscription} from 'rxjs';*/\n\n@Component({\n\tselector: 'dashboard',\n\ttemplateUrl: './dashboard.component.html',\n\tstyleUrls: ['./dashboard.component.scss'],\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class DashboardComponent implements OnInit /*, OnDestroy*/ {\n\t@Input() selectedFilters: AvailableFilters;\n\t/*availableFilters: AvailableFilters;\n\tfilterSubscription: Subscription;\n\tfilterForm = new FormGroup({\n\t\tselectedOffice: new FormControl(''),\n\t\tselectedFloor: new FormControl(''),\n\t\tselectedDate: new FormControl(''),\n\t\tselectedAdditionalFilters: new FormControl(),\n\t\tselectedTimeStart: new FormControl(),\n\t\tselectedTimeEnd: new FormControl()\n\t});*/\n\tconstructor(private bookingSearchFiltersService: BookingSearchFiltersService) {}\n\t/*getAvailableFilters(): void {\n\t\tthis.filterSubscription = this.bookingSearchFiltersService\n\t\t\t.getAvailableFilters()\n\t\t\t.subscribe((availableFilters) => (this.availableFilters = availableFilters));\n\t}*/\n\tngOnInit(): void {\n\t\t/*this.getAvailableFilters();*/\n\t}\n\t// ngOnDestroy() {\n\t// \tif (this.filterSubscription) {\n\t// \t\tthis.filterSubscription.unsubscribe();\n\t// \t\tthis.filterSubscription = null;\n\t// \t}\n\t// }\n}\n","<header></header>\n<filterboard></filterboard>\n<div class=\"table-container\">\n\t<booking-search-table></booking-search-table>\n</div>\n","import {Component, Input, OnDestroy, OnInit} from '@angular/core';\nimport {AvailableFilters} from '@pages/booking-search/dashboard/available-filters';\nimport {Subscription} from 'rxjs';\nimport {FormControl, FormGroup} from '@angular/forms';\nimport {BookingSearchFiltersService} from '@pages/booking-search/booking-search-filters.service';\n\n@Component({\n\tselector: 'filterboard',\n\ttemplateUrl: './filterboard.component.html',\n\tstyleUrls: ['./filterboard.component.scss']\n})\nexport class FilterboardComponent implements OnInit, OnDestroy {\n\t@Input() selectedFilters: AvailableFilters;\n\tavailableFilters: AvailableFilters;\n\tfilterSubscription: Subscription;\n\tfilterForm = new FormGroup({\n\t\tselectedOffice: new FormControl(''),\n\t\tselectedFloor: new FormControl(''),\n\t\tselectedDate: new FormControl(''),\n\t\tselectedAdditionalFilters: new FormControl(),\n\t\tselectedTimeStart: new FormControl(),\n\t\tselectedTimeEnd: new FormControl()\n\t});\n\tconstructor(private bookingSearchFiltersService: BookingSearchFiltersService) {}\n\tgetAvailableFilters(): void {\n\t\tthis.filterSubscription = this.bookingSearchFiltersService\n\t\t\t.getAvailableFilters()\n\t\t\t.subscribe((availableFilters) => (this.availableFilters = availableFilters));\n\t}\n\tngOnInit(): void {\n\t\tthis.getAvailableFilters();\n\t}\n\tngOnDestroy() {\n\t\tif (this.filterSubscription) {\n\t\t\tthis.filterSubscription.unsubscribe();\n\t\t\tthis.filterSubscription = null;\n\t\t}\n\t}\n}\n","<div class=\"filter-bar\">\n\t<form [formGroup]=\"filterForm\">\n\t\t<div class=\"main-filters\">\n\t\t\t<mat-form-field>\n\t\t\t\t<mat-label>Choose an office</mat-label>\n\t\t\t\t<mat-select formControlName=\"selectedOffice\">\n\t\t\t\t\t<mat-option *ngFor=\"let office of availableFilters.offices\" [value]=\"office\">\n\t\t\t\t\t\t{{ office }}\n\t\t\t\t\t</mat-option>\n\t\t\t\t</mat-select>\n\t\t\t</mat-form-field>\n\n\t\t\t<mat-form-field>\n\t\t\t\t<mat-label>Choose a date</mat-label>\n\t\t\t\t<label>\n\t\t\t\t\t<input matInput [matDatepicker]=\"basicDatepicker\" formControlName=\"selectedDate\" />\n\t\t\t\t</label>\n\t\t\t\t<mat-datepicker-toggle matSuffix [for]=\"basicDatepicker\"></mat-datepicker-toggle>\n\t\t\t\t<mat-datepicker #basicDatepicker></mat-datepicker>\n\t\t\t</mat-form-field>\n\t\t\t<mat-form-field>\n\t\t\t\t<mat-label>Additional filters</mat-label>\n\t\t\t\t<mat-select formControlName=\"selectedAdditionalFilters\" multiple>\n\t\t\t\t\t<mat-option\n\t\t\t\t\t\t*ngFor=\"let additionalFilter of availableFilters.additionalFilters\"\n\t\t\t\t\t\t[value]=\"additionalFilter\"\n\t\t\t\t\t>\n\t\t\t\t\t\t{{ additionalFilter }}\n\t\t\t\t\t</mat-option>\n\t\t\t\t</mat-select>\n\t\t\t</mat-form-field>\n\n\t\t\t<mat-form-field>\n\t\t\t\t<mat-label>Choose a floor</mat-label>\n\t\t\t\t<mat-select formControlName=\"selectedFloor\">\n\t\t\t\t\t<mat-option *ngFor=\"let floor of availableFilters.floors\" [value]=\"floor\">\n\t\t\t\t\t\t{{ floor }}\n\t\t\t\t\t</mat-option>\n\t\t\t\t</mat-select>\n\t\t\t</mat-form-field>\n\t\t\t<mat-form-field>\n\t\t\t\t<mat-label>Time from</mat-label>\n\t\t\t\t<label>\n\t\t\t\t\t<input matInput formControlName=\"selectedTimeStart\" type=\"time\" />\n\t\t\t\t</label>\n\t\t\t</mat-form-field>\n\n\t\t\t<mat-form-field>\n\t\t\t\t<mat-label>Time to</mat-label>\n\t\t\t\t<label>\n\t\t\t\t\t<input matInput formControlName=\"selectedTimeEnd\" type=\"time\" />\n\t\t\t\t</label>\n\t\t\t</mat-form-field>\n\t\t\t<button mat-raised-button color=\"primary\" class=\"search-button\">Search</button>\n\t\t</div>\n\t</form>\n</div>\n","import {BannerNextBookingComponent} from '@pages/main-page/banner-next-booking/banner-next-booking.component';\nimport {MatExpansionModule} from '@angular/material/expansion';\nimport {MatTabsModule} from '@angular/material/tabs';\nimport {NgModule} from '@angular/core';\n\n@NgModule({\n\tdeclarations: [BannerNextBookingComponent],\n\timports: [MatExpansionModule, MatTabsModule],\n\texports: [BannerNextBookingComponent]\n})\nexport class BannerModule {}\n","import {ChangeDetectionStrategy, Component, Input, OnInit} from '@angular/core';\nimport {OrderModel} from '@pages/main-page/side-nav-home-page/entity-orders/order-model';\n\n@Component({\n\tselector: 'banner-next-booking',\n\ttemplateUrl: './banner-next-booking.component.html',\n\tstyleUrls: ['./banner-next-booking.component.scss'],\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class BannerNextBookingComponent implements OnInit {\n\t@Input() order: OrderModel;\n\n\tconstructor() {}\n\n\tngOnInit(): void {}\n}\n","<mat-expansion-panel>\n\t<mat-expansion-panel-header>\n\t\t<mat-panel-title>\n\t\t\tNext booking:\n\t\t</mat-panel-title>\n\t\t<mat-panel-description class=\"next-booking-time\">\n\t\t\t{{ order.date }}, {{ order.timeFrom }}-{{ order.timeTo }}\n\t\t</mat-panel-description>\n\t</mat-expansion-panel-header>\n\t<mat-tab-group color=\"primary\">\n\t\t<mat-tab label=\"Location\"\n\t\t\t><p></p>\n\t\t\t<p>Country: {{ order.country }}</p>\n\t\t\t<p>City: {{ order.city }}</p></mat-tab\n\t\t>\n\t\t<mat-tab label=\"Adress\"\n\t\t\t><p></p>\n\t\t\t<p>Street: {{ order.street }}</p>\n\t\t\t<p>House number: {{ order.houseNumber }}</p>\n\t\t\t<p>Floor: {{ order.floor }}</p></mat-tab\n\t\t>\n\t\t<mat-tab label=\"Place\"\n\t\t\t><p></p>\n\t\t\t{{ order.idOfPlace }}</mat-tab\n\t\t>\n\t</mat-tab-group>\n</mat-expansion-panel>\n","import {NgModule} from '@angular/core';\n\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatGridListModule} from '@angular/material/grid-list';\nimport {CardGridComponent} from '@pages/main-page/card-grid/card-grid.component';\nimport {CardModule} from '@shared/country-card/card-module';\n\n@NgModule({\n\tdeclarations: [CardGridComponent],\n\texports: [CardGridComponent],\n\timports: [BrowserAnimationsModule, MatIconModule, MatButtonModule, MatGridListModule, CardModule]\n})\nexport class CardGridModule {}\n","import {ChangeDetectionStrategy, Component, OnInit} from '@angular/core';\nimport {CountryCardModel} from '@shared/country-card/entity/country-card-model';\nimport {CardService} from '@shared/country-card/entity/card.service';\n\n@Component({\n\tselector: 'card-grid',\n\ttemplateUrl: './card-grid.component.html',\n\tstyleUrls: ['./card-grid.component.scss'],\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class CardGridComponent implements OnInit {\n\tcountries: CountryCardModel[];\n\n\tconstructor(private serviceMe: CardService) {}\n\n\tngOnInit(): void {\n\t\tthis.getSmth();\n\t}\n\n\tgetSmth(): void {\n\t\tthis.serviceMe.getHeroes().subscribe((heroes) => (this.countries = heroes));\n\t}\n}\n","<mat-grid-list cols=\"4\" rowHeight=\"3:4\">\n\t<mat-grid-tile class=\"card-in-grid\" *ngFor=\"let country of countries\">\n\t\t<country-card [country]=\"country\"></country-card>\n\t</mat-grid-tile>\n</mat-grid-list>\n","import {ChangeDetectionStrategy, Component, OnInit, ViewChild} from '@angular/core';\nimport {MatSidenav} from '@angular/material/sidenav';\n\n@Component({\n\tselector: 'main-page',\n\ttemplateUrl: './main-page.component.html',\n\tstyleUrls: ['./main-page.component.scss'],\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class MainPageComponent implements OnInit {\n\tconstructor() {}\n\n\tngOnInit(): void {}\n\n\t@ViewChild('sidenav') sidenav: MatSidenav;\n\n\tclose() {\n\t\tthis.sidenav.close();\n\t}\n}\n","<side-nav-home-page></side-nav-home-page>\n","import {OrderModel} from '@pages/main-page/side-nav-home-page/entity-orders/order-model';\n\nexport const ordersMock: OrderModel[] = [\n\t{\n\t\tcountry: 'Belarus',\n\t\tcity: 'Minsk',\n\t\tstreet: 'Academica Kuprevicha',\n\t\thouseNumber: 3,\n\t\tfloor: 6,\n\t\tdate: '17.07.2020',\n\t\ttimeFrom: '15.00',\n\t\ttimeTo: '19.30',\n\t\tidOfPlace: 'BEMI623CC'\n\t},\n\t{\n\t\tcountry: 'Belarus',\n\t\tcity: 'Minsk',\n\t\tstreet: 'Academica Kuprevicha',\n\t\thouseNumber: 3,\n\t\tfloor: 6,\n\t\tdate: 'Every Friday',\n\t\ttimeFrom: '08.00',\n\t\ttimeTo: '00.00',\n\t\tidOfPlace: 'BEMI6103TWC'\n\t},\n\t{\n\t\tcountry: 'Belarus',\n\t\tcity: 'Brest',\n\t\tstreet: 'Internationalnaya',\n\t\thouseNumber: 5,\n\t\tfloor: 12,\n\t\tdate: '17.07.2020 - 19.07.2020',\n\t\ttimeFrom: '18.00',\n\t\ttimeTo: '20.15',\n\t\tidOfPlace: 'BEBR1211WK'\n\t},\n\t{\n\t\tcountry: 'Belarus',\n\t\tcity: 'Minsk',\n\t\tstreet: 'Academica Kuprevicha',\n\t\thouseNumber: 3,\n\t\tfloor: 6,\n\t\tdate: '23.07.2020',\n\t\ttimeFrom: '14.00',\n\t\ttimeTo: '18.30',\n\t\tidOfPlace: 'BEMI6112TW'\n\t}\n];\n","import {ChangeDetectionStrategy, Component, OnInit, ViewChild} from '@angular/core';\nimport {MatSidenav} from '@angular/material/sidenav';\nimport {ordersMock} from '@pages/main-page/side-nav-home-page/entity-orders/mock-order';\n\n@Component({\n\tselector: 'side-nav-home-page',\n\ttemplateUrl: './side-nav-home-page.component.html',\n\tstyleUrls: ['./side-nav-home-page.component.scss'],\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class SideNavHomePageComponent implements OnInit {\n\tconstructor() {}\n\n\tngOnInit(): void {}\n\n\t@ViewChild('sidenav') sidenav: MatSidenav;\n\torders = ordersMock;\n\n\tclose() {\n\t\tthis.sidenav.close();\n\t}\n}\n","<mat-sidenav-container (backdropClick)=\"close()\">\n\t<mat-sidenav #sidenav (keydown.escape)=\"close()\" disableClose>\n\t\t<mat-icon color=\"primary\" (click)=\"close()\" class=\"close-button\">highlight_off</mat-icon>\n\t\t<p class=\"header-side-nav\">Your bookings:</p>\n\t\t<div class=\"all-books\" *ngFor=\"let order of orders\">\n\t\t\t<mat-list>\n\t\t\t\t<mat-list-item class=\"item-of-books-list\"\n\t\t\t\t\t>Location: {{ order.country }}, {{ order.city }}</mat-list-item\n\t\t\t\t>\n\t\t\t\t<mat-list-item class=\"item-of-books-list\"\n\t\t\t\t\t>Adress: {{ order.houseNumber }}, {{ order.street }} st.</mat-list-item\n\t\t\t\t>\n\t\t\t\t<mat-list-item class=\"item-of-books-list\">Date: {{ order.date }}</mat-list-item>\n\t\t\t\t<mat-list-item class=\"item-of-books-list\">Time: {{ order.timeFrom }}-{{ order.timeTo }}</mat-list-item>\n\t\t\t\t<mat-list-item class=\"item-of-books-list\">Place: {{ order.idOfPlace }}</mat-list-item>\n\t\t\t</mat-list>\n\t\t</div>\n\t</mat-sidenav>\n\t<mat-sidenav-content>\n\t\t<header-costom></header-costom>\n\t\t<button mat-button (click)=\"sidenav.open()\" color=\"primary\" class=\"open-sidenav-btn\">\n\t\t\t<mat-icon>text_snippet</mat-icon>\n\t\t\tAll bookings\n\t\t</button>\n\t\t<banner-next-booking [order]=\"orders[0]\"></banner-next-booking>\n\t\t<p class=\"select-country-block\">Select coutry:</p>\n\t\t<card-grid></card-grid>\n\t\t<footer></footer>\n\t</mat-sidenav-content>\n</mat-sidenav-container>\n","import {NgModule} from '@angular/core';\n\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatListModule} from '@angular/material/list';\nimport {SideNavHomePageComponent} from '@pages/main-page/side-nav-home-page/side-nav-home-page.component';\nimport {MatSidenavModule} from '@angular/material/sidenav';\nimport {FooterComponent} from '@shared/footer/footer.component';\nimport {HeaderCostomComponent} from '@shared/header-costom/header-costom.component';\nimport {BannerModule} from '@pages/main-page/banner-next-booking/banner-module';\nimport {CardModule} from '@shared/country-card/card-module';\nimport {CardGridModule} from '@pages/main-page/card-grid/card-grid-module';\nimport {MatToolbarModule} from '@angular/material/toolbar';\n\n@NgModule({\n\tdeclarations: [SideNavHomePageComponent, FooterComponent, HeaderCostomComponent],\n\timports: [\n\t\tBrowserAnimationsModule,\n\t\tMatIconModule,\n\t\tMatButtonModule,\n\t\tMatListModule,\n\t\tMatSidenavModule,\n\t\tCardModule,\n\t\tBannerModule,\n\t\tCardGridModule,\n\t\tMatToolbarModule\n\t],\n\texports: [SideNavHomePageComponent]\n})\nexport class SideNavModule {}\n","import {Component, EventEmitter, Input, OnInit, Output, ViewChild} from '@angular/core';\nimport {Validators, ValidationErrors, ValidatorFn, AbstractControl, FormGroup, FormBuilder} from '@angular/forms';\nimport {Observable} from 'rxjs';\nimport {map, startWith} from 'rxjs/operators';\nimport {Country, City, Office} from '@pages/office-creation/entities';\nimport {MatStep} from '@angular/material/stepper';\nimport {STEPPER_GLOBAL_OPTIONS} from '@angular/cdk/stepper';\n\n@Component({\n\tselector: 'creation-form',\n\ttemplateUrl: './creation-form.component.html',\n\tstyleUrls: ['./creation-form.component.scss'],\n\tproviders: [\n\t\t{\n\t\t\tprovide: STEPPER_GLOBAL_OPTIONS,\n\t\t\tuseValue: {showError: true}\n\t\t}\n\t]\n})\nexport class CreationFormComponent implements OnInit {\n\tfilteredCountries: Observable<Country[]>;\n\tfilteredCities: Observable<City[]>;\n\tformGroup: FormGroup;\n\tcountryId: number;\n\t@Input() countries;\n\t@Input() cities;\n\t@Output() addOffice = new EventEmitter<any>();\n\t@Output() setCities = new EventEmitter<any>();\n\t@ViewChild('cityStep')\n\tcityStep: MatStep;\n\n\tconstructor(private _formBuilder: FormBuilder) {}\n\n\tngOnInit() {\n\t\tif (!this.countries) {\n\t\t\tthis.countries = [];\n\t\t}\n\t\tif (!this.cities) {\n\t\t\tthis.cities = [];\n\t\t}\n\n\t\tthis.formGroup = this.buildFormGroup();\n\n\t\tthis.filteredCountries = this.formGroup\n\t\t\t.get('countryFormGroup')\n\t\t\t.get('countryControl')\n\t\t\t.valueChanges.pipe(\n\t\t\t\tstartWith(''),\n\t\t\t\tmap((value) => this._filter(value, this.countries))\n\t\t\t);\n\t}\n\n\tprivate buildFormGroup(): FormGroup {\n\t\treturn this._formBuilder.group({\n\t\t\tcountryFormGroup: this._formBuilder.group({\n\t\t\t\tcountryControl: ['', [this.requireCountryMatch(), Validators.required]]\n\t\t\t}),\n\t\t\tcityFormGroup: this._formBuilder.group({\n\t\t\t\tcityControl: ['', [this.requireCityMatch(), Validators.required]]\n\t\t\t}),\n\t\t\taddressFormGroup: this._formBuilder.group({\n\t\t\t\taddressControl: ['', Validators.required]\n\t\t\t}),\n\t\t\tfloorFormGroup: this._formBuilder.group({\n\t\t\t\tfloorControl: ['', [Validators.required, Validators.pattern('[0-9]+'), Validators.maxLength(3)]]\n\t\t\t})\n\t\t});\n\t}\n\n\tprivate _filter(value: any, options: any[]): any[] {\n\t\tif (!options) {\n\t\t\toptions = [];\n\t\t}\n\t\tconst filterValue = typeof value !== 'string' ? value.name.toLowerCase() : value.toLowerCase();\n\t\treturn options.filter((option) => option.name.toLowerCase().includes(filterValue));\n\t}\n\n\tprivate requireMatch(control, options: any[]): boolean {\n\t\tconst names = options.map((option) => {\n\t\t\treturn option.name;\n\t\t});\n\t\tconst selection: any = typeof control.value === 'string' ? control.value : control.value.name;\n\t\tif (names && !names.includes(selection)) {\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tprivate requireCountryMatch(): ValidatorFn {\n\t\treturn (control: AbstractControl): ValidationErrors | null => {\n\t\t\treturn this.requireMatch(control, this.countries) ? {requireMatch: true} : null;\n\t\t};\n\t}\n\n\tprivate requireCityMatch(): ValidatorFn {\n\t\treturn (control: AbstractControl): ValidationErrors | null => {\n\t\t\treturn this.requireMatch(control, this.cities) ? {requireMatch: true} : null;\n\t\t};\n\t}\n\n\tdisplayValue(option): Country | City {\n\t\treturn option ? option.name : option;\n\t}\n\n\tselectionChange(event) {\n\t\tif (event.selectedIndex === 0) {\n\t\t} else if (event.selectedIndex === 1) {\n\t\t\tif (this.formGroup.get('countryFormGroup.countryControl').value.id !== this.countryId) {\n\t\t\t\tthis.countryId = this.formGroup.get('countryFormGroup.countryControl').value.id;\n\n\t\t\t\tthis.setCities.emit(this.countryId);\n\t\t\t\tthis.filteredCities = this.formGroup\n\t\t\t\t\t.get('cityFormGroup')\n\t\t\t\t\t.get('cityControl')\n\t\t\t\t\t.valueChanges.pipe(\n\t\t\t\t\t\tstartWith(''),\n\t\t\t\t\t\tmap((value) => this._filter(value, this.cities))\n\t\t\t\t\t);\n\t\t\t}\n\t\t}\n\t}\n\n\tsubmit(): void {\n\t\tconst office: Office = {\n\t\t\tcountry: this.formGroup.get('countryFormGroup.countryControl').value.id,\n\t\t\tcity: this.formGroup.get('cityFormGroup.cityControl').value.id,\n\t\t\taddress: this.formGroup.get('addressFormGroup.addressControl').value.trim(),\n\t\t\tfloor: +this.formGroup.get('floorFormGroup.floorControl').value.trim()\n\t\t};\n\t\tconsole.log(office);\n\t\tthis.addOffice.emit(office);\n\t}\n\n\tonSelectionChange(event) {\n\t\tif (event.option.value.id !== this.countryId) {\n\t\t\tthis.formGroup.get('cityFormGroup.cityControl').setErrors({incorrect: true});\n\t\t\tthis.cityStep.completed = false;\n\t\t}\n\t}\n}\n","<form class=\"office-creation-form\" [formGroup]=\"formGroup\">\n\t<h1 class=\"title\">Office creation</h1>\n\n\t<mat-vertical-stepper linear (selectionChange)=\"selectionChange($event)\" #stepper>\n\t\t<mat-step\n\t\t\tlabel=\"Country\"\n\t\t\t[completed]=\"formGroup.get('countryFormGroup').valid\"\n\t\t\t[stepControl]=\"formGroup.get('countryFormGroup')\"\n\t\t>\n\t\t\t<form formGroupName=\"countryFormGroup\">\n\t\t\t\t<mat-form-field>\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tplaceholder=\"Country\"\n\t\t\t\t\t\taria-label=\"Number\"\n\t\t\t\t\t\tmatInput\n\t\t\t\t\t\tformControlName=\"countryControl\"\n\t\t\t\t\t\t[matAutocomplete]=\"autoCountry\"\n\t\t\t\t\t/>\n\t\t\t\t\t<mat-autocomplete\n\t\t\t\t\t\t#autoCountry=\"matAutocomplete\"\n\t\t\t\t\t\t[displayWith]=\"displayValue\"\n\t\t\t\t\t\t(optionSelected)=\"onSelectionChange($event)\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<mat-option *ngFor=\"let country of filteredCountries | async\" [value]=\"country\">\n\t\t\t\t\t\t\t{{ country.name }}\n\t\t\t\t\t\t</mat-option>\n\t\t\t\t\t</mat-autocomplete>\n\t\t\t\t</mat-form-field>\n\t\t\t</form>\n\t\t</mat-step>\n\n\t\t<mat-step\n\t\t\tlabel=\"City\"\n\t\t\t[completed]=\"formGroup.get('cityFormGroup').valid\"\n\t\t\t[stepControl]=\"formGroup.get('cityFormGroup')\"\n\t\t\terrorMessage=\"City is invalid.\"\n\t\t\t#cityStep\n\t\t>\n\t\t\t<form formGroupName=\"cityFormGroup\">\n\t\t\t\t<mat-form-field>\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tplaceholder=\"City\"\n\t\t\t\t\t\taria-label=\"Number\"\n\t\t\t\t\t\tmatInput\n\t\t\t\t\t\tformControlName=\"cityControl\"\n\t\t\t\t\t\t[matAutocomplete]=\"autoCity\"\n\t\t\t\t\t/>\n\t\t\t\t\t<mat-autocomplete #autoCity=\"matAutocomplete\" [displayWith]=\"displayValue\">\n\t\t\t\t\t\t<mat-option *ngFor=\"let city of filteredCities | async\" [value]=\"city\">\n\t\t\t\t\t\t\t{{ city.name }}\n\t\t\t\t\t\t</mat-option>\n\t\t\t\t\t</mat-autocomplete>\n\t\t\t\t</mat-form-field>\n\t\t\t</form>\n\t\t</mat-step>\n\n\t\t<!--<mat-step\n\t\t\tlabel=\"City\"\n\t\t\t[completed]=\"formGroup.get('cityFormGroup').valid\"\n\t\t\t[stepControl]=\"formGroup.get('cityFormGroup')\"\n\t\t>\n\t\t\t<form formGroupName=\"cityFormGroup\">\n\t\t\t\t<mat-form-field>\n\t\t\t\t\t<mat-label>City</mat-label>\n\t\t\t\t\t<input matInput placeholder=\"City\" formControlName=\"cityControl\" name=\"city\" />\n\t\t\t\t</mat-form-field>\n\t\t\t</form>\n\t\t</mat-step>-->\n\n\t\t<mat-step\n\t\t\tlabel=\"Address\"\n\t\t\t[completed]=\"formGroup.get('addressFormGroup').valid\"\n\t\t\t[stepControl]=\"formGroup.get('addressFormGroup')\"\n\t\t>\n\t\t\t<form formGroupName=\"addressFormGroup\">\n\t\t\t\t<mat-form-field>\n\t\t\t\t\t<mat-label>Address</mat-label>\n\t\t\t\t\t<input matInput placeholder=\"Address\" formControlName=\"addressControl\" name=\"address\" />\n\t\t\t\t</mat-form-field>\n\t\t\t</form>\n\t\t</mat-step>\n\n\t\t<mat-step\n\t\t\tlabel=\"Floor\"\n\t\t\t[completed]=\"formGroup.get('floorFormGroup').valid\"\n\t\t\t[stepControl]=\"formGroup.get('floorFormGroup')\"\n\t\t>\n\t\t\t<form formGroupName=\"floorFormGroup\">\n\t\t\t\t<mat-form-field>\n\t\t\t\t\t<mat-label>Floor</mat-label>\n\t\t\t\t\t<input matInput placeholder=\"Floor\" formControlName=\"floorControl\" />\n\t\t\t\t</mat-form-field>\n\t\t\t</form>\n\t\t</mat-step>\n\t</mat-vertical-stepper>\n\n\t<div class=\"buttons\">\n\t\t<button mat-flat-button class=\"cancel\">Cancel</button>\n\t\t<button mat-flat-button color=\"primary\" [disabled]=\"!formGroup.valid\" (click)=\"submit()\">\n\t\t\tCreate\n\t\t</button>\n\t</div>\n</form>\n","import {Component, OnInit} from '@angular/core';\r\nimport {Observable} from 'rxjs';\r\nimport {OfficeCreationService} from './office-creation.service';\r\nimport {Country, City, Office} from '@pages/office-creation/entities';\r\nimport {take} from 'rxjs/internal/operators';\r\n\r\n@Component({\r\n\tselector: 'office-creation',\r\n\ttemplateUrl: './office-creation.component.html',\r\n\tstyleUrls: ['./office-creation.component.scss']\r\n})\r\nexport class OfficeCreationComponent implements OnInit {\r\n\tcountries$;\r\n\tcities$;\r\n\r\n\tconstructor(private officeCreationService: OfficeCreationService) {}\r\n\r\n\tngOnInit() {\r\n\t\tthis.countries$ = this.getCountries().pipe(take(1));\r\n\t}\r\n\r\n\tgetCountries(): Observable<Country[]> {\r\n\t\treturn (this.countries$ = this.officeCreationService.getCountries());\r\n\t}\r\n\r\n\tsetCities(id: number): void {\r\n\t\tthis.cities$ = this.getCities(id).pipe(take(1));\r\n\t}\r\n\r\n\tgetCities(id: number): Observable<City[]> {\r\n\t\treturn (this.cities$ = this.officeCreationService.getCities(id));\r\n\t}\r\n\r\n\taddOffice(office: Office): void {\r\n\t\tthis.officeCreationService.addOffice(office);\r\n\t}\r\n}\r\n","<creation-form\r\n\t[countries]=\"countries$ | async\"\r\n\t[cities]=\"cities$ | async\"\r\n\t(addOffice)=\"addOffice($event)\"\r\n\t(setCities)=\"setCities($event)\"\r\n></creation-form>\r\n","import {BrowserModule} from '@angular/platform-browser';\r\nimport {NgModule} from '@angular/core';\r\n\r\nimport {MatFormFieldModule} from '@angular/material/form-field';\r\nimport {MatInputModule} from '@angular/material/input';\r\nimport {MatIconModule} from '@angular/material/icon';\r\nimport {MatButtonModule} from '@angular/material/button';\r\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\r\nimport {MatOptionModule} from '@angular/material/core';\r\nimport {MatAutocompleteModule} from '@angular/material/autocomplete';\r\nimport {MatStepperModule} from '@angular/material/stepper';\r\n\r\nimport {HttpClientModule} from '@angular/common/http';\r\nimport {CreationFormComponent} from './creation-form/creation-form.component';\r\nimport {OfficeCreationService} from '@pages/office-creation/office-creation.service';\r\nimport {OfficeCreationComponent} from '@pages/office-creation/office-creation.component';\r\n\r\n@NgModule({\r\n\tdeclarations: [OfficeCreationComponent, CreationFormComponent],\r\n\timports: [\r\n\t\tBrowserModule,\r\n\t\tFormsModule,\r\n\t\tReactiveFormsModule,\r\n\t\tHttpClientModule,\r\n\t\tMatFormFieldModule,\r\n\t\tMatInputModule,\r\n\t\tMatIconModule,\r\n\t\tMatButtonModule,\r\n\t\tMatOptionModule,\r\n\t\tMatAutocompleteModule,\r\n\t\tMatStepperModule\r\n\t],\r\n\tproviders: [OfficeCreationService],\r\n\tbootstrap: []\r\n})\r\nexport class OfficeCreationModule {}\r\n","import {Injectable} from '@angular/core';\r\nimport {Observable} from 'rxjs';\r\nimport {Country, City, Office} from '@pages/office-creation/entities';\r\nimport {ApiService} from '../../api.service';\r\n\r\n@Injectable()\r\nexport class OfficeCreationService extends ApiService {\r\n\tgetCountries(): Observable<Country[]> {\r\n\t\treturn this.get<Country[]>('/countries');\r\n\t}\r\n\r\n\tgetCities(id: number): Observable<City[]> {\r\n\t\treturn this.get<City[]>(`/countries/cities/${id}`);\r\n\t}\r\n\r\n\taddOffice(office: Office): Observable<Office> {\r\n\t\treturn this.post<Office>('', office);\r\n\t}\r\n}\r\n","import {NgModule} from '@angular/core';\nimport {CountryCardComponent} from '@shared/country-card/country-card.component';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatChipsModule} from '@angular/material/chips';\nimport {CardService} from '@shared/country-card/entity/card.service';\n\n@NgModule({\n\tdeclarations: [CountryCardComponent],\n\timports: [MatCardModule, MatChipsModule],\n\texports: [CountryCardComponent],\n\tproviders: [CardService]\n})\nexport class CardModule {}\n","import {ChangeDetectionStrategy, Component, Input, OnInit} from '@angular/core';\nimport {CountryCardModel} from './entity/country-card-model';\n\n@Component({\n\tselector: 'country-card',\n\ttemplateUrl: './country-card.component.html',\n\tstyleUrls: ['./country-card.component.scss'],\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class CountryCardComponent implements OnInit {\n\t@Input() country: CountryCardModel;\n\n\tconstructor() {}\n\n\tngOnInit(): void {}\n}\n","<mat-card>\n\t<mat-card-title class=\"country-card-title\">\n\t\t{{ country.name }}\n\t</mat-card-title>\n\t<!--<mat-chip-list class=\"country-card-city-list\">\n\t\t<mat-chip *ngFor=\"let city of country.cities\">{{city}}</mat-chip>\n\t</mat-chip-list>\n\t\t<img mat-card-image src=\"{{country.blackWhiteImageUrl}}\" alt=\"Belarus\" class=\"country-card-image\">-->\n</mat-card>\n","import {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {CountryCardModel} from './country-card-model';\nimport {Observable} from 'rxjs';\nimport {take} from 'rxjs/operators';\n\n@Injectable()\nexport class CardService {\n\tprivate heroesUrl: 'https://hotchairs.herokuapp.com/countries/';\n\n\tconstructor(private http: HttpClient) {}\n\n\tgetHeroes(): Observable<CountryCardModel[]> {\n\t\treturn this.http.get<CountryCardModel[]>(this.heroesUrl).pipe(take(1));\n\t}\n}\n","import {ChangeDetectionStrategy, Component, OnInit} from '@angular/core';\n\n@Component({\n\tselector: 'footer',\n\ttemplateUrl: './footer.component.html',\n\tstyleUrls: ['./footer.component.scss'],\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class FooterComponent implements OnInit {\n\tconstructor() {}\n\n\tngOnInit(): void {}\n}\n","<div>\n\t© 2020 Copyright: HotChairs.by\n</div>\n","import {ChangeDetectionStrategy, Component, OnInit} from '@angular/core';\n\n@Component({\n\tselector: 'header-costom',\n\ttemplateUrl: './header-costom.component.html',\n\tstyleUrls: ['./header-costom.component.scss'],\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class HeaderCostomComponent implements OnInit {\n\tconstructor() {}\n\n\tngOnInit(): void {}\n}\n","<mat-toolbar class=\"toolbar\">\n\t<button mat-flat-button class=\"logo-button\">\n\t\t<img src=\"../../../assets/static_picture/logo-name-blue-m.png\" alt=\"HomePage\" class=\"logo-image\" />\n\t</button>\n\n\t<a class=\"menu-tab\">Staff bookings</a>\n\t<a class=\"menu-tab\">Manage offices</a>\n\t<a class=\"menu-tab\">Manage roles</a>\n\n\t<span class=\"username\">Alex</span>\n</mat-toolbar>\n","import {ChangeDetectionStrategy, Component, OnInit} from '@angular/core';\nimport {User} from '@entities/user';\nimport {MENU} from '@shared/mock-menu-tabs';\nimport {HeaderService} from '@shared/header/header.service';\nimport {Router} from '@angular/router';\n\n@Component({\n\tselector: 'header',\n\ttemplateUrl: './header.component.html',\n\tstyleUrls: ['./header.component.scss'],\n\tproviders: [HeaderService],\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class HeaderComponent implements OnInit {\n\tuser: User;\n\tmenu = MENU;\n\n\tconstructor(private router: Router, private headerService: HeaderService) {}\n\n\tngOnInit(): void {\n\t\tthis.headerService.getData().subscribe((data: User) => (this.user = data));\n\t}\n\n\tonLogo(): void {\n\t\tthis.router.navigate(['/main']);\n\t}\n}\n","<mat-toolbar class=\"toolbar\">\n\t<nav>\n\t\t<div class=\"logo\">\n\t\t\t<img src=\"assets/images/logo-name-blue-m.png\" alt=\"HomePage\" class=\"logo-image\" (click)=\"onLogo()\"/>\n\t\t</div>\n\t</nav>\n\n<!--\t<ng-template *ngIf=\"user.links['1'].href !== 'none'\">-->\n<!--\t\t<a class=\"menu-tab\">Staff bookings</a>-->\n<!--\t</ng-template>-->\n<!--\t<ng-template *ngIf=\"user.links['2'].href !== 'none'\">-->\n<!--\t\t<a class=\"menu-tab\">Manage offices</a>-->\n<!--\t</ng-template>-->\n<!--\t<ng-template *ngIf=\"user.links['3'].href !== 'none'\">-->\n<!--\t\t<a class=\"menu-tab\">Manage offices</a>-->\n<!--\t</ng-template>-->\n\n\t<!--\t<ng-container [ngSwitch]=\"user.role\">-->\n\t<!--\t\t<ng-template ngSwitchCase=\"admin\">-->\n\t<!--\t\t\t<ng-container *ngFor=\"let tab of menu\">-->\n\t<!--\t\t\t\t<a class=\"menu-tab\">{{ tab }}</a>-->\n\t<!--\t\t\t</ng-container>-->\n\t<!--\t\t</ng-template>-->\n\t<!--\t\t<ng-template ngSwitchCase=\"hr\">-->\n\t<!--\t\t\t<a class=\"menu-tab\">Staff bookings</a>-->\n\t<!--\t\t</ng-template>-->\n\t<!--\t\t<ng-template ngSwitchCase=\"office-manager\">-->\n\t<!--\t\t\t<a class=\"menu-tab\">Manage offices</a>-->\n\t<!--\t\t</ng-template>-->\n\t<!--\t\t<ng-template ngSwitchCase=\"user\"></ng-template>-->\n\t<!--\t</ng-container>-->\n\n\t<span class=\"username\">{{ user.name }}</span>\n</mat-toolbar>\n","import {BrowserModule} from '@angular/platform-browser';\r\nimport {NgModule} from '@angular/core';\r\n\r\nimport {HttpClientModule} from '@angular/common/http';\r\nimport {HeaderComponent} from '@shared/header/header.component';\r\n\r\nimport {HeaderService} from '@shared/header/header.service';\r\nimport {MatToolbarModule} from '@angular/material/toolbar';\r\n\r\n@NgModule({\r\n\tdeclarations: [HeaderComponent],\r\n\timports: [BrowserModule, HttpClientModule, MatToolbarModule],\r\n\tproviders: [HeaderService]\r\n})\r\nexport class HeaderModule {}\r\n","import {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {take} from 'rxjs/operators';\n\n@Injectable()\nexport class HeaderService {\n\tconstructor(private http: HttpClient) {}\n\n\tgetData() {\n\t\treturn this.http.get('http://hotchairs.herokuapp.com/users{id}').pipe(take(1));\n\t}\n}\n","export const MENU: string[] = ['Staff bookings', 'Manage offices', 'Manage roles'];\n","import {Injectable} from '@angular/core';\r\nimport {HttpEvent, HttpInterceptor, HttpHandler, HttpRequest} from '@angular/common/http';\r\n\r\nimport {Observable} from 'rxjs';\r\n\r\n@Injectable()\r\nexport class HttpRequestInterceptor implements HttpInterceptor {\r\n\tintercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n\t\treq = req.clone({\r\n\t\t\twithCredentials: true\r\n\t\t});\r\n\r\n\t\treturn next.handle(req);\r\n\t}\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n\tproduction: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import {enableProdMode} from '@angular/core';\nimport {platformBrowserDynamic} from '@angular/platform-browser-dynamic';\n\nimport {AppModule} from './app/app.module';\nimport {environment} from './environments/environment';\n\nif (environment.production) {\n\tenableProdMode();\n}\n\nplatformBrowserDynamic()\n\t.bootstrapModule(AppModule)\n\t.catch((err) => console.error(err));\n"]}